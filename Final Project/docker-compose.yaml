version: "3.3"
services:
  postgresdc:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=$PG_USER
      - POSTGRES_PASSWORD=$PG_PASS
      - POSTGRES_DB=jaladb
    restart: always
    networks:
      - mynetwork2
    volumes:
      - pgdata2:/var/lib/postgresql/data

  sonarqubedc:
    image: sonarqube:8-community
    environment:
      - SONAR_JDBC_USERNAME=$PG_USER
      - SONAR_JDBC_PASSWORD=$PG_PASS
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgresdc/postgres
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - postgresdc
    networks:
      - mynetwork2
    volumes:
      - sonarqube_data2=/opt/sonarqube/data
      - sonarqube_extensions2=/opt/sonarqube/extensions
      - sonarqube_logs2=/opt/sonarqube/logs

  jenkinsdc:
    image: jenkins/jenkins
    restart: always
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - mynetwork2

  nexusdc:
    image: sonatype/nexus3
    restart: always
    ports:
      - "8081:8081"
    networks:
      - mynetwork2

  portainerdc:
    image: portainer/portainer
    restart: always
    ports:
      - "9001:9000"
    networks:
      - mynetwork2

  mynodeappdc:
    image: rys999/mynodejsapp:joel.chambilla
    build: ../Homework 2/.
    restart: always
    ports:
      - "3000:3000"
    networks:
      - mynetwork2

networks:
  mynetwork2:

volumes:
  pgdata2:
  sonarqube_data2:
  sonarqube_extensions2:
  sonarqube_logs2:
